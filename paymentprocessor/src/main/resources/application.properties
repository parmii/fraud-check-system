spring.application.name=paymentprocessor
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=dbuser
spring.datasource.password=dbpassword
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.sql.init.mode=always
server.port=8080

# Kafka configuration
camel.component.kafka.brokers=localhost:9092
#logging.level.org.apache.camel.component.kafka=DEBUG
#logging.level.org.apache.camel=DEBUG
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=fraud-check-consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
camel.springboot.enabled=true
camel.springboot.java-routes-include-pattern=**
spring.kafka.listener.missing-topics-fatal=false        
camel.springboot.routes-collector-enabled=true
camel.springboot.main-run-controller=true
#spring.datasource.initialization-mode=always
#spring.datasource.initialize=true
#spring.datasource.schema=classpath:/schema.sql
#spring.datasource.continue-on-error=true

app.broker.endpoint=http://localhost:8081/api/fraud-check/request
app.broker.camelRoute=kafka:pps-fraud-check-request?brokers=localhost:9092