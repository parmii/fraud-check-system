version: '3'
services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "5433:5433"
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_DB: postgres
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional: Load schema on startup

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    hostname: zookeeper
    networks:
      - app-network
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092 # 29092 between containers / 9092 outside
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: kafka
      BOOTSTRAP_SERVER: kafka:9092
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=WARN,kafka.foo.bar=DEBUG'
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
    hostname: kafka
    networks:
      - app-network
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    depends_on:
      - zookeeper

  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    command: >
      bash -c "
        cub kafka-ready -b kafka:29092 1 20"
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local